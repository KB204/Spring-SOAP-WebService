
package stub;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "CustomerWS", targetNamespace = "http://controller.soap_service.soap_test_project.net/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CustomerWS {


    /**
     * 
     * @return
     *     returns java.util.List<stub.CustomerResponse>
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "getAllCustomers", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.GetAllCustomers")
    @ResponseWrapper(localName = "getAllCustomersResponse", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.GetAllCustomersResponse")
    public List<CustomerResponse> getAllCustomers();

    /**
     * 
     * @param identity
     */
    @WebMethod
    @RequestWrapper(localName = "removeCustomer", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.RemoveCustomer")
    @ResponseWrapper(localName = "removeCustomerResponse", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.RemoveCustomerResponse")
    public void removeCustomer(
        @WebParam(name = "identity", targetNamespace = "")
        String identity);

    /**
     * 
     * @param identity
     * @return
     *     returns stub.CustomerResponse
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "getCustomerByIdentity", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.GetCustomerByIdentity")
    @ResponseWrapper(localName = "getCustomerByIdentityResponse", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.GetCustomerByIdentityResponse")
    public CustomerResponse getCustomerByIdentity(
        @WebParam(name = "identity", targetNamespace = "")
        String identity);

    /**
     * 
     * @param customer
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "saveNewCustomer", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.SaveNewCustomer")
    @ResponseWrapper(localName = "saveNewCustomerResponse", targetNamespace = "http://controller.soap_service.soap_test_project.net/", className = "stub.SaveNewCustomerResponse")
    public String saveNewCustomer(
        @WebParam(name = "Customer", targetNamespace = "")
        CustomerRequest customer);

}
